// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test stimulus/torchtune
nextflow_process {

    name "Test Process STIMULUS_TORCHTUNE"
    script "../main.nf"
    process "STIMULUS_TORCHTUNE"

    tag "modules"
    tag "modules_nfcore"
    tag "stimulus"
    tag "stimulus/torchtune"

    test("test") {
        config "./test.config"

        setup {
            run("STIMULUS_SPLITCSV") {
                script "../../propr/main.nf"
                process {
                """
                input[0] = [
                    [ id:'test'],
                      file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/dna_experiment/experiment_config.json', checkIfExists: true)
                ]
                input[1] = [
                     file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/dna_experiment/input_data_with_split.csv', checkIfExists: true)
                ]
                """
                }
            }
        }

        when {
            process {
                """
                input[0] = STIMULUS_SPLITCSV.out.split_csv // get the experiment config from interpreter and combine the channel
                input[1] = [
                    file("path_to_model_config"), 
                    file("path_to_"model)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
